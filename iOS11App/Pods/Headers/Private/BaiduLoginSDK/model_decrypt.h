/*
 *  model_decrypt.h
 *  model decryption
 *
 *  Created by fangyanghua on 9/25/17.
 *
 */

#ifndef BAIDU_ML_MOBILE_MODEL_ENCRYPT_INC_MODEL_DECRYPT_H
#define BAIDU_ML_MOBILE_MODEL_ENCRYPT_INC_MODEL_DECRYPT_H

#include "model_crypt.h"

#ifdef __cplusplus
extern "C" {
#endif

/*
 * decrypt the encrypted model
 * input parameters:
 *   crypt_context: context handle created by init_crypt_context
 *   sign: key signature generated by init_crypt_context
 *   input: buffer of the encrypted model
 *   input_size: size of the encrypted model
 * output parameters:
 *   output: decrypted model buffer
 *   output_size: size of the decrypted model
 * return value:
 *   0: succeed
 *   other: failed
 * annotation:
 *   input: usually created by open_file_map, should be released by close_file_map finally
 *   output: generated inside, must be freed manually outside by using free(output);
 */
MODEL_CRYPT_HIDE_API
int model_decrypt(IN const void *crypt_context, IN unsigned int sign,
                  IN const unsigned char *input, IN unsigned int input_size,
                  OUT unsigned char **output, OUT unsigned int *output_size);

MODEL_CRYPT_HIDE_API
int model_decrypt_to_disk(IN const void *crypt_context, IN unsigned int sign,
                          IN const unsigned char *input, IN unsigned int input_size,
                          OUT unsigned char **output_path, OUT unsigned int *output_size);
    
#ifdef __cplusplus
}
#endif

#endif /* BAIDU_ML_MOBILE_MODEL_ENCRYPT_INC_MODEL_DECRYPT_H */
